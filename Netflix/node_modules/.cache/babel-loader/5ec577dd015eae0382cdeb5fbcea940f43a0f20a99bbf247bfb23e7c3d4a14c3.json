{"ast":null,"code":"var _jsxFileName = \"/home/murshid/Desktop/MERN/netflix/src/Components/RowPost/RowPost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './RowPost.css';\nimport { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport { imgUrl, API_KEY } from '../Constants/Constants';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowPost = props => {\n  _s();\n  const [movies, setmovies] = useState([]);\n  const [urlid, setUrlid] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      // console.log(response.data);\n      setmovies(response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '500',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  const handleMovie = id => {\n    console.log(id);\n    axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      console.log(response.data);\n      if (response.data.results.length !== 0) {\n        setUrlid(response.data.results[0]);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map((obj, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imgUrl + obj.backdro_path}`,\n        alt: \"\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), urlid && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: urlid.key,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(RowPost, \"Ku2lJxhYl1SqoLDHDRofBMREk+w=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useState","useEffect","axios","imgUrl","API_KEY","YouTube","RowPost","props","movies","setmovies","urlid","setUrlid","get","url","then","response","data","results","opts","height","width","playerVars","autoplay","handleMovie","id","console","log","length","title","map","obj","index","isSmall","backdro_path","key"],"sources":["/home/murshid/Desktop/MERN/netflix/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React from 'react'\nimport './RowPost.css'\nimport { useState,useEffect } from 'react'\nimport axios from '../axios'\nimport {imgUrl,API_KEY} from '../Constants/Constants'\nimport YouTube from 'react-youtube'\n\nconst RowPost = (props) => {\n  const [movies, setmovies] = useState([])\n  const [urlid,setUrlid] = useState('')\n\n  useEffect(() => {\n    axios.get(props.url).then((response)=>{\n      // console.log(response.data);\n      setmovies(response.data.results)\n    })\n  },[])\n  const opts = {\n    height: '500',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    },\n  };\n  const handleMovie=(id)=>{\n      console.log(id);\n      axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((response)=>{\n        console.log(response.data);\n        if(response.data.results.length!==0){\n          setUrlid(response.data.results[0])\n\n        }\n      })\n  }\n  return (\n    <div className='row'>\n        <h2>{props.title}</h2>\n        <div className=\"posters\">\n            {movies.map((obj,index)=>\n               <img onClick={()=>handleMovie(obj.id)} key={index} className={props.isSmall ? 'smallPoster': 'poster'} src={`${imgUrl+obj.backdro_path}`} alt=''/>\n            )\n           \n            }\n        </div>\n        {urlid && <YouTube videoId={urlid.key} opts={opts}/>}\n    </div>\n  )\n}\n\nexport default RowPost"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAAQC,MAAM,EAACC,OAAO,QAAO,wBAAwB;AACrD,OAAOC,OAAO,MAAM,eAAe;AAAA;AAEnC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAErCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACU,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MACpC;MACAN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,MAAMC,WAAW,GAAEC,EAAE,IAAG;IACpBC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACftB,KAAK,CAACU,GAAG,CAAE,SAAQY,EAAG,mBAAkBpB,OAAQ,iBAAgB,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAG;MACjFU,OAAO,CAACC,GAAG,CAACX,QAAQ,CAACC,IAAI,CAAC;MAC1B,IAAGD,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACU,MAAM,KAAG,CAAC,EAAC;QAClChB,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAEpC;IACF,CAAC,CAAC;EACN,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAKV,KAAK,CAACqB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,SAAS,EAAC,SAAS;MAAA,UACnBpB,MAAM,CAACqB,GAAG,CAAC,CAACC,GAAG,EAACC,KAAK,kBACnB;QAAK,OAAO,EAAE,MAAIR,WAAW,CAACO,GAAG,CAACN,EAAE,CAAE;QAAa,SAAS,EAAEjB,KAAK,CAACyB,OAAO,GAAG,aAAa,GAAE,QAAS;QAAC,GAAG,EAAG,GAAE7B,MAAM,GAAC2B,GAAG,CAACG,YAAa,EAAE;QAAC,GAAG,EAAC;MAAE,GAApGF,KAAK;QAAA;QAAA;QAAA;MAAA,QAAiG;IACpJ;MAAA;MAAA;MAAA;IAAA,QAGC,EACLrB,KAAK,iBAAI,QAAC,OAAO;MAAC,OAAO,EAAEA,KAAK,CAACwB,GAAI;MAAC,IAAI,EAAEhB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEV,CAAC;AAAA,GAzCKZ,OAAO;AAAA,KAAPA,OAAO;AA2Cb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}